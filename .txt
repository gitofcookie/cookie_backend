
const express = require("express");
const cors = require("cors");
const { PDFDocument, StandardFonts, rgb } = require("pdf-lib");
const fs = require("fs");
const path = require("path");
const app = express();
app.use(cors());
app.use(express.json());

app.use(express.static(path.join(__dirname, "public")));

app.post("/generate-pdf", async (req, res) => {
  const { name, date, address, signature } = req.body;

  const capitalized_name = name.charAt(0).toUpperCase() + name.slice(1);

  // Load the PDF template

  console.log('Got the request', name, date, address);

  const pdf_path = "template_agreement.pdf"

  const pdfBytes = fs.readFileSync(pdf_path);
  const pdfDoc = await PDFDocument.load(pdfBytes);
  const firstPage = pdfDoc.getPages()[4];
  const title_page = pdfDoc.getPages()[0];
  const { width, height } = firstPage.getSize();

  // Load Times New Roman Bold font
  const font = await pdfDoc.embedFont(StandardFonts.TimesRomanBold);

  // Add Name, Date, Address
  title_page.drawText(`Dear ${capitalized_name}`, { x: 470, y: 225, size: 16, font, color: rgb(1,1, 1) });
  firstPage.drawText(capitalized_name, { x: 465, y: 240, size: 17, font, color: rgb(0, 0, 0) });
  title_page.drawText(`This agreement is made and effective as of ${date}`, { x: 280, y: height - 60, size: 12, font, color: rgb(1,1,1) });

  if (signature) {
    const signatureImage = await pdfDoc.embedPng(Buffer.from(signature.split(",")[1], "base64"));
    firstPage.drawImage(signatureImage, { x: width / 2 + 130, y: 275, width: 100, height: 50 });
  }

  const modifiedPdfBytes = await pdfDoc.save();
  fs.writeFileSync(`modified_agreement_${name}.pdf`, modifiedPdfBytes);

  res.json({ pdfUrl: "http://localhost:5000/download-pdf" });
});

app.get("/download-pdf", (req, res) => {
  res.download(`modified_agreement_${name}.pdf`);
});

app.listen(5000, () => console.log("Server running on port 5000"));